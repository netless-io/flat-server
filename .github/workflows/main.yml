name: CI
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flat-server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: deploy
      uses: appleboy/ssh-action@v0.1.4
      env:
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        WECHAT_APP_ID: ${{ secrets.WECHAT_APP_ID }}
        WECHAT_APP_SECRET: ${{ secrets.WECHAT_APP_SECRET }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        REDIS_DB: ${{ secrets.REDIS_DB }}
        MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
        MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_DB: ${{ secrets.MYSQL_DB }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
        AGORA_APP_CERTIFICATE: ${{ secrets.AGORA_APP_CERTIFICATE }}
        AGORA_RESTFUL_ID: ${{ secrets.AGORA_RESTFUL_ID }}
        AGORA_RESTFUL_SECRET: ${{ secrets.AGORA_RESTFUL_SECRET }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_ALGORITHMS: ${{ secrets.JWT_ALGORITHMS }}
        NETLESS_ACCESS_KEY: ${{ secrets.NETLESS_ACCESS_KEY }}
        NETLESS_SECRET_ACCESS_KEY: ${{ secrets.NETLESS_SECRET_ACCESS_KEY }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        envs: SERVER_PORT,WECHAT_APP_ID,WECHAT_APP_SECRET,REDIS_HOST,REDIS_PORT,REDIS_PASSWORD,REDIS_DB,MYSQL_HOST,MYSQL_PORT,MYSQL_USER,MYSQL_PASSWORD,MYSQL_DB,DOCKERHUB_USERNAME,AGORA_APP_ID,AGORA_APP_CERTIFICATE,JWT_SECRET,JWT_ALGORITHMS,NETLESS_ACCESS_KEY,NETLESS_SECRET_ACCESS_KEY,AGORA_RESTFUL_ID,AGORA_RESTFUL_SECRET
        script: |
          docker pull $DOCKERHUB_USERNAME/flat-server:latest
          docker rm -f flat-server
          env > ./env_file
          docker run -dit -p 80:80 --name flat-server --env-file ./env_file $DOCKERHUB_USERNAME/flat-server:latest
          rm -rf ./env_file
