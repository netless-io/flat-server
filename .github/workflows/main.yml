name: CI
on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]')"
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  platforms: linux/amd64
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/flat-server:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: deploy
              uses: appleboy/ssh-action@v0.1.4
              env:
                  SERVER_PORT: ${{ secrets.SERVER_PORT }}
                  WECHAT_APP_ID: ${{ secrets.WECHAT_APP_ID }}
                  WECHAT_APP_SECRET: ${{ secrets.WECHAT_APP_SECRET }}
                  REDIS_HOST: ${{ secrets.REDIS_HOST }}
                  REDIS_PORT: ${{ secrets.REDIS_PORT }}
                  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
                  REDIS_DB: ${{ secrets.REDIS_DB }}
                  MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
                  MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
                  MYSQL_USER: ${{ secrets.MYSQL_USER }}
                  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
                  MYSQL_DB: ${{ secrets.MYSQL_DB }}
                  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
                  AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
                  AGORA_APP_CERTIFICATE: ${{ secrets.AGORA_APP_CERTIFICATE }}
                  AGORA_RESTFUL_ID: ${{ secrets.AGORA_RESTFUL_ID }}
                  AGORA_RESTFUL_SECRET: ${{ secrets.AGORA_RESTFUL_SECRET }}
                  AGORA_OSS_VENDOR: ${{ secrets.AGORA_OSS_VENDOR }}
                  AGORA_OSS_ACCESS_KEY_ID: ${{ secrets.AGORA_OSS_ACCESS_KEY_ID }}
                  AGORA_OSS_ACCESS_KEY_SECRET: ${{ secrets.AGORA_OSS_ACCESS_KEY_SECRET }}
                  AGORA_OSS_REGION: ${{ secrets.AGORA_OSS_REGION }}
                  AGORA_OSS_BUCKET: ${{ secrets.AGORA_OSS_BUCKET }}
                  AGORA_OSS_FOLDER: ${{ secrets.AGORA_OSS_FOLDER }}
                  AGORA_OSS_PREFIX: ${{ secrets.AGORA_OSS_PREFIX }}
                  JWT_SECRET: ${{ secrets.JWT_SECRET }}
                  JWT_ALGORITHMS: ${{ secrets.JWT_ALGORITHMS }}
                  NETLESS_ACCESS_KEY: ${{ secrets.NETLESS_ACCESS_KEY }}
                  NETLESS_SECRET_ACCESS_KEY: ${{ secrets.NETLESS_SECRET_ACCESS_KEY }}
                  ALIBABA_CLOUD_OSS_ACCESS_KEY: ${{ secrets.ALIBABA_CLOUD_OSS_ACCESS_KEY }}
                  ALIBABA_CLOUD_OSS_SECRET_ACCESS_KEY: ${{ secrets.ALIBABA_CLOUD_OSS_SECRET_ACCESS_KEY }}
                  ALIBABA_CLOUD_OSS_ROLE_ARN: ${{ secrets.ALIBABA_CLOUD_OSS_ROLE_ARN }}
                  ALIBABA_CLOUD_OSS_POLICY: ${{ secrets.ALIBABA_CLOUD_OSS_POLICY }}
                  ALIBABA_CLOUD_OSS_SESSION_NAME: ${{ secrets.ALIBABA_CLOUD_OSS_SESSION_NAME }}
                  ALIBABA_CLOUD_OSS_BUCKET: ${{ secrets.ALIBABA_CLOUD_OSS_BUCKET }}
                  ALIBABA_CLOUD_OSS_REGION: ${{ secrets.ALIBABA_CLOUD_OSS_REGION }}
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  envs: SERVER_PORT,WECHAT_APP_ID,WECHAT_APP_SECRET,REDIS_HOST,REDIS_PORT,REDIS_PASSWORD,REDIS_DB,MYSQL_HOST,MYSQL_PORT,MYSQL_USER,MYSQL_PASSWORD,MYSQL_DB,DOCKERHUB_USERNAME,AGORA_APP_ID,AGORA_APP_CERTIFICATE,JWT_SECRET,JWT_ALGORITHMS,NETLESS_ACCESS_KEY,NETLESS_SECRET_ACCESS_KEY,AGORA_RESTFUL_ID,AGORA_RESTFUL_SECRET,AGORA_OSS_VENDOR,AGORA_OSS_ACCESS_KEY_ID,AGORA_OSS_ACCESS_KEY_SECRET,AGORA_OSS_REGION,AGORA_OSS_BUCKET,AGORA_OSS_FOLDER,AGORA_OSS_PREFIX,ALIBABA_CLOUD_OSS_ACCESS_KEY,ALIBABA_CLOUD_OSS_ACCESS_KEY_SECRET,ALIBABA_CLOUD_OSS_ROLE_ARN,ALIBABA_CLOUD_OSS_POLICY,ALIBABA_CLOUD_OSS_SESSION_NAME,ALIBABA_CLOUD_OSS_BUCKET,ALIBABA_CLOUD_OSS_REGION
                  script: |
                      docker pull $DOCKERHUB_USERNAME/flat-server:latest
                      docker rm -f flat-server
                      docker run -dit -p 80:80 --name flat-server -e SERVER_PORT="$SERVER_PORT" -e WECHAT_APP_ID="$WECHAT_APP_ID" -e WECHAT_APP_SECRET="$WECHAT_APP_SECRET" -e REDIS_HOST="$REDIS_HOST" -e REDIS_PORT="$REDIS_PORT" -e REDIS_PASSWORD="$REDIS_PASSWORD" -e REDIS_DB="$REDIS_DB" -e MYSQL_HOST="$MYSQL_HOST" -e MYSQL_USER="$MYSQL_USER" -e MYSQL_PORT="$MYSQL_PORT" -e MYSQL_PASSWORD="$MYSQL_PASSWORD" -e MYSQL_DB="$MYSQL_DB" -e AGORA_APP_ID="$AGORA_APP_ID" -e AGORA_APP_CERTIFICATE="$AGORA_APP_CERTIFICATE" -e JWT_SECRET="$JWT_SECRET" -e JWT_ALGORITHMS="$JWT_ALGORITHMS" -e NETLESS_ACCESS_KEY="$NETLESS_ACCESS_KEY" -e NETLESS_SECRET_ACCESS_KEY="$NETLESS_SECRET_ACCESS_KEY" -e AGORA_RESTFUL_ID="$AGORA_RESTFUL_ID" -e AGORA_RESTFUL_SECRET="$AGORA_RESTFUL_SECRET" -e AGORA_OSS_VENDOR="$AGORA_OSS_VENDOR" -e AGORA_OSS_ACCESS_KEY_ID="$AGORA_OSS_ACCESS_KEY_ID" -e AGORA_OSS_ACCESS_KEY_SECRET="$AGORA_OSS_ACCESS_KEY_SECRET" -e AGORA_OSS_REGION="$AGORA_OSS_REGION" -e AGORA_OSS_BUCKET="$AGORA_OSS_BUCKET" -e AGORA_OSS_FOLDER="$AGORA_OSS_FOLDER" -e AGORA_OSS_PREFIX="$AGORA_OSS_PREFIX" ALIBABA_CLOUD_OSS_ACCESS_KEY="$ALIBABA_CLOUD_OSS_ACCESS_KEY" -e ALIBABA_CLOUD_OSS_ACCESS_KEY_SECRET="$ALIBABA_CLOUD_OSS_ACCESS_KEY_SECRET" -e ALIBABA_CLOUD_OSS_ROLE_ARN="$ALIBABA_CLOUD_OSS_ROLE_ARN" -e ALIBABA_CLOUD_OSS_POLICY="$ALIBABA_CLOUD_OSS_POLICY" -e ALIBABA_CLOUD_OSS_SESSION_NAME="$ALIBABA_CLOUD_OSS_SESSION_NAME" -e ALIBABA_CLOUD_OSS_BUCKET="$ALIBABA_CLOUD_OSS_BUCKET" -e ALIBABA_CLOUD_OSS_REGION="$ALIBABA_CLOUD_OSS_REGION" -e $DOCKERHUB_USERNAME/flat-server:latest
